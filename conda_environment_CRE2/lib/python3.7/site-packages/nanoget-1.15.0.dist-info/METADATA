Metadata-Version: 2.1
Name: nanoget
Version: 1.15.0
Summary: Functions to extract information from Oxford Nanopore sequencing data and alignments.
Home-page: https://github.com/wdecoster/nanoget
Author: Wouter De Coster
Author-email: decosterwouter@gmail.com
License: GPLv3
Keywords: nanopore sequencing plotting quality control
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: pandas (>=0.22.0)
Requires-Dist: numpy
Requires-Dist: biopython
Requires-Dist: pysam (>0.10.0.0)

# nanoget
This module provides functions to extract useful metrics from Oxford Nanopore sequencing reads and alignments.  

[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/wouter_decoster.svg?style=social&label=Follow%20%40wouter_decoster)](https://twitter.com/wouter_decoster)
[![install with conda](https://anaconda.org/bioconda/nanoget/badges/installer/conda.svg)](https://anaconda.org/bioconda/nanoget)
[![Build Status](https://travis-ci.org/wdecoster/nanoget.svg?branch=master)](https://travis-ci.org/wdecoster/nanoget)


## FUNCTIONS
Data can be presented in the following formats, using the following functions:  
- A sorted bam file `process_bam(bamfile, threads)`  
- A standard fastq file `process_fastq_plain(fastqfile, 'threads')`  
- A fastq file with metadata from MinKNOW or Albacore `process_fastq_rich(fastqfile)`  
- A sequencing_summary file generated by Albacore `process_summary(sequencing_summary.txt, 'readtype')`  

Fastq files can be compressed using gzip, bzip2 or bgzip. The data is returned as a pandas DataFrame with standardized headernames for convenient extraction. The functions perform logging while being called and extracting data.


## INSTALLATION
```bash
pip install nanoget
```
or  
[![install with conda](https://anaconda.org/bioconda/nanoget/badges/installer/conda.svg)](https://anaconda.org/bioconda/nanoget)
```
conda install -c bioconda nanoget
```

Copyright: 2016-2020 Wouter De Coster <decosterwouter@gmail.com>


