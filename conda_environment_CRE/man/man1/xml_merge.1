.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "XML_MERGE 1"
.TH XML_MERGE 1 "2016-06-21" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\&  xml_merge \- merge back XML files split with C<xml_split>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`xml_merge\*(C'\fR takes several xml files that have been split using
\&\f(CW\*(C`xml_split\*(C'\fR and recreates a single file.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-o <output_file>" 4
.IX Item "-o <output_file>"
unless this option is used the program output goes to \s-1STDOUT\s0
.IP "\-i" 4
.IX Item "-i"
the files use XInclude instead of processing instructions (they
were created using the \f(CW\*(C`\-i\*(C'\fR option in \f(CW\*(C`xml_split\*(C'\fR)
.IP "\-v" 4
.IX Item "-v"
verbose output
.IP "\-V" 4
.IX Item "-V"
outputs version and exit
.IP "\-h" 4
.IX Item "-h"
short help
.IP "\-m" 4
.IX Item "-m"
man (requires pod2text to be in the path)
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\&  xml_merge foo\-00.xml             # output to stdout
\&  xml_merge \-o foo.xml foo\-00.xml  # output to foo.xml
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
XML::Twig, xml_split
.SH "TODO/BUGS"
.IX Header "TODO/BUGS"
.SH "AUTHOR"
.IX Header "AUTHOR"
Michel Rodriguez <mirod@cpan.org>
.SH "LICENSE"
.IX Header "LICENSE"
This tool is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
