.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Phylo::Matrices::Datatype::Mixed 3"
.TH Bio::Phylo::Matrices::Datatype::Mixed 3 "2014-02-08" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Phylo::Matrices::Datatype::Mixed \- Validator subclass,
no serviceable parts inside
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Bio::Phylo::Matrices::Datatype::* classes are used to validate data
contained by Bio::Phylo::Matrices::Matrix and Bio::Phylo::Matrices::Datum
objects.
.SH "METHODS"
.IX Header "METHODS"
.SS "\s-1MUTATORS\s0"
.IX Subsection "MUTATORS"
.IP "\fIset_missing()\fR" 4
.IX Item "set_missing()"
Sets the symbol for missing data.
.Sp
.Vb 7
\& Type    : Mutator
\& Title   : set_missing
\& Usage   : $obj\->set_missing(\*(Aq?\*(Aq);
\& Function: Sets the symbol for missing data
\& Returns : Modified object.
\& Args    : Argument must be a single
\&           character, default is \*(Aq?\*(Aq
.Ve
.IP "\fIset_gap()\fR" 4
.IX Item "set_gap()"
Sets the symbol for gaps.
.Sp
.Vb 7
\& Type    : Mutator
\& Title   : set_gap
\& Usage   : $obj\->set_gap(\*(Aq\-\*(Aq);
\& Function: Sets the symbol for gaps
\& Returns : Modified object.
\& Args    : Argument must be a single
\&           character, default is \*(Aq\-\*(Aq
.Ve
.SS "\s-1ACCESSORS\s0"
.IX Subsection "ACCESSORS"
.IP "\fIget_missing()\fR" 4
.IX Item "get_missing()"
Returns the object's missing data symbol.
.Sp
.Vb 6
\& Type    : Accessor
\& Title   : get_missing
\& Usage   : my $missing = $obj\->get_missing;
\& Function: Returns the object\*(Aqs missing data symbol
\& Returns : A string
\& Args    : None
.Ve
.IP "\fIget_gap()\fR" 4
.IX Item "get_gap()"
Returns the object's gap symbol.
.Sp
.Vb 6
\& Type    : Accessor
\& Title   : get_gap
\& Usage   : my $gap = $obj\->get_gap;
\& Function: Returns the object\*(Aqs gap symbol
\& Returns : A string
\& Args    : None
.Ve
.IP "\fIget_type()\fR" 4
.IX Item "get_type()"
Returns the object's datatype as string.
.Sp
.Vb 6
\& Type    : Accessor
\& Title   : get_type
\& Usage   : my $type = $obj\->get_type;
\& Function: Returns the object\*(Aqs datatype
\& Returns : A string
\& Args    : None
.Ve
.IP "\fIget_type_for_site()\fR" 4
.IX Item "get_type_for_site()"
Returns type object for site number.
.Sp
.Vb 6
\& Type    : Accessor
\& Title   : get_type_for_site
\& Usage   : my $type = $obj\->get_type_for_site(1);
\& Function: Returns data type object for site
\& Returns : A Bio::Phylo::Matrices::Datatype object
\& Args    : None
.Ve
.SS "\s-1TESTS\s0"
.IX Subsection "TESTS"
.IP "\fIis_same()\fR" 4
.IX Item "is_same()"
Compares data type objects.
.Sp
.Vb 8
\& Type    : Test
\& Title   : is_same
\& Usage   : if ( $obj\->is_same($obj1) ) {
\&              # do something
\&           }
\& Function: Returns true if $obj1 contains the same validation rules
\& Returns : BOOLEAN
\& Args    : A Bio::Phylo::Matrices::Datatype::* object
.Ve
.IP "\fIis_valid()\fR" 4
.IX Item "is_valid()"
Returns true if argument only contains valid characters
.Sp
.Vb 8
\& Type    : Test
\& Title   : is_valid
\& Usage   : if ( $obj\->is_valid($datum) ) {
\&              # do something
\&           }
\& Function: Returns true if $datum only contains valid characters
\& Returns : BOOLEAN
\& Args    : A Bio::Phylo::Matrices::Datum object
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
There is a mailing list at <https://groups.google.com/forum/#!forum/bio\-phylo> 
for any user or developer questions and discussions.
.IP "Bio::Phylo::Matrices::Datatype" 4
.IX Item "Bio::Phylo::Matrices::Datatype"
This object inherits from Bio::Phylo::Matrices::Datatype, so the methods defined
therein are also applicable to Bio::Phylo::Matrices::Datatype::Mixed
objects.
.IP "Bio::Phylo::Manual" 4
.IX Item "Bio::Phylo::Manual"
Also see the manual: Bio::Phylo::Manual and <http://rutgervos.blogspot.com>.
.SH "CITATION"
.IX Header "CITATION"
If you use Bio::Phylo in published research, please cite it:
.PP
\&\fBRutger A Vos\fR, \fBJason Caravas\fR, \fBKlaas Hartmann\fR, \fBMark A Jensen\fR
and \fBChase Miller\fR, 2011. Bio::Phylo \- phyloinformatic analysis using Perl.
\&\fI\s-1BMC\s0 Bioinformatics\fR \fB12\fR:63.
<http://dx.doi.org/10.1186/1471\-2105\-12\-63>
