.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "HTML::FormatText 3"
.TH HTML::FormatText 3 "2016-12-07" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::FormatText \- Format HTML as plaintext
.SH "VERSION"
.IX Header "VERSION"
version 2.16
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use HTML::TreeBuilder;
\&    $tree = HTML::TreeBuilder\->new\->parse_file("test.html");
\&
\&    use HTML::FormatText;
\&    $formatter = HTML::FormatText\->new(leftmargin => 0, rightmargin => 50);
\&    print $formatter\->format($tree);
.Ve
.PP
or, more simply:
.PP
.Vb 5
\&    use HTML::FormatText;
\&    my $string = HTML::FormatText\->format_file(
\&        \*(Aqtest.html\*(Aq,
\&        leftmargin => 0, rightmargin => 50
\&        );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
HTML::FormatText is a formatter that outputs plain text. All character
attributes (bold/italic/underline) are ignored. Formatting of \s-1HTML\s0 tables and
forms is not implemented.
.PP
HTML::FormatText is built on HTML::Formatter and documentation for that
module applies to this \- especially \*(L"new\*(R" in HTML::Formatter,
\&\*(L"format_file\*(R" in HTML::Formatter and \*(L"format_string\*(R" in HTML::Formatter.
.PP
You might specify the following parameters when constructing the formatter:
.IP "\fIleftmargin\fR (alias \fIlm\fR)" 4
.IX Item "leftmargin (alias lm)"
The column of the left margin. The default is 3.
.IP "\fIrightmargin\fR (alias \fIrm\fR)" 4
.IX Item "rightmargin (alias rm)"
The column of the right margin. The default is 72.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTML::Formatter
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Nigel Metheringham <nigelm@cpan.org>
.IP "\(bu" 4
Sean M Burke <sburke@cpan.org>
.IP "\(bu" 4
Gisle Aas <gisle@ActiveState.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Nigel Metheringham, 2002\-2005 Sean M Burke, 1999\-2002 Gisle Aas.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
