.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Cache::FileBackend 3"
.TH Cache::FileBackend 3 "2015-01-22" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cache::FileBackend \-\- a filesystem based persistence mechanism
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The FileBackend class is used to persist data to the filesystem
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  my $backend = new Cache::FileBackend( \*(Aq/tmp/FileCache\*(Aq, 3, 000 );
\&
\&  See Cache::Backend for the usage synopsis.
\&
\&  $backend\->store( \*(Aqnamespace\*(Aq, \*(Aqfoo\*(Aq, \*(Aqbar\*(Aq );
\&
\&  my $bar = $backend\->restore( \*(Aqnamespace\*(Aq, \*(Aqfoo\*(Aq );
\&
\&  my $size_of_bar = $backend\->get_size( \*(Aqnamespace\*(Aq, \*(Aqfoo\*(Aq );
\&
\&  foreach my $key ( $backend\->get_keys( \*(Aqnamespace\*(Aq ) )
\&  {
\&    $backend\->delete_key( \*(Aqnamespace\*(Aq, $key );
\&  }
\&
\&  foreach my $namespace ( $backend\->get_namespaces( ) )
\&  {
\&    $backend\->delete_namespace( $namespace );
\&  }
.Ve
.SH "METHODS"
.IX Header "METHODS"
See Cache::Backend for the \s-1API\s0 documentation.
.IP "\fBnew( \f(CB$root\fB, \f(CB$depth\fB, \f(CB$directory_umask\fB )\fR" 4
.IX Item "new( $root, $depth, $directory_umask )"
Construct a new FileBackend that writes data to the \fI\f(CI$root\fI\fR
directory, automatically creates subdirectories \fI\f(CI$depth\fI\fR levels deep,
and uses the umask of \fI\f(CI$directory_umask\fI\fR when creating directories.
.SH "PROPERTIES"
.IX Header "PROPERTIES"
.IP "\fB(get|set)_root\fR" 4
.IX Item "(get|set)_root"
The location of the parent directory in which to store the files
.IP "\fB(get|set)_depth\fR" 4
.IX Item "(get|set)_depth"
The branching factor of the subdirectories created to store the files
.IP "\fB(get|set)_directory_umask\fR" 4
.IX Item "(get|set)_directory_umask"
The umask to be used when creating directories
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Cache::Backend, Cache::MemoryBackend, Cache::SharedMemoryBackend
.SH "AUTHOR"
.IX Header "AUTHOR"
Original author: DeWitt Clinton <dewitt@unto.net>
.PP
Last author:     \f(CW$Author:\fR dclinton $
.PP
Copyright (C) 2001\-2003 DeWitt Clinton
