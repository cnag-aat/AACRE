.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bundle::Image::Info::Everything 3"
.TH Bundle::Image::Info::Everything 3 "2015-03-03" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bundle::Image::Info::Everything \- complete support for Image::Info
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& perl \-MCPAN \-e \*(Aqinstall Bundle::Image::Info::Everything\*(Aq
.Ve
.SH "CONTENTS"
.IX Header "CONTENTS"
Image::Info \- the base Image::Info module
.PP
Compress::Zlib \- everything for \s-1PNG\s0 processing
.PP
XML::LibXML::Reader \- everything for \s-1SVG\s0 processing
.PP
XML::Simple \- everything for \s-1SVG\s0 processing
.PP
Image::Xbm 1.07 \- everything for \s-1XBM\s0 processing
.PP
Image::Xpm 1.10 \- everything for \s-1XPM\s0 processing
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This bundle installs everything needed for Image::Info.
.SS "\s-1SOURCE LIST\s0"
.IX Subsection "SOURCE LIST"
The \*(L"\s-1CONTENTS\*(R"\s0 list is created by manually resolving all the
contents in the following Bundle files:
.IP "Bundle::Image::Info::PNG" 4
.IX Item "Bundle::Image::Info::PNG"
.PD 0
.IP "Bundle::Image::Info::SVG" 4
.IX Item "Bundle::Image::Info::SVG"
.IP "Bundle::Image::Info::XBM" 4
.IX Item "Bundle::Image::Info::XBM"
.IP "Bundle::Image::Info::XPM" 4
.IX Item "Bundle::Image::Info::XPM"
.PD
.PP
Unfortunately the \s-1CPAN\s0 module cannot cope with recursively defined
Bundles, so this had to be done.
.SH "AUTHOR"
.IX Header "AUTHOR"
Slaven Rezic <srezic@cpan.org>
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 23:" 4
.IX Item "Around line 23:"
\&'=end' without a target?
