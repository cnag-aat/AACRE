.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Coordinate::Result 3"
.TH Bio::Coordinate::Result 3 "2016-12-15" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Coordinate::Result \- Results from coordinate transformation.
.SH "VERSION"
.IX Header "VERSION"
version 1.007001
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Bio::Coordinate::Result;
\&
\&  #get results from a Bio::Coordinate::MapperI
\&  $matched = $result\->each_match;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The results from Bio::Coordinate::MapperI are kept in an object which
itself is a split location, See Bio::Location::Split. The results
are either Matches or Gaps.  See Bio::Coordinate::Result::Match and
Bio::Coordinate::Result::Gap.
.PP
If only one Match is returned, there is a convenience method of
retrieving it or accessing its methods. Same holds true for a Gap.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "seq_id"
.IX Subsection "seq_id"
.Vb 3
\&  Title   : seq_id
\&  Usage   : my $seqid = $location\->seq_id();
\&  Function: Get/Set seq_id that location refers to
\&
\&            We override this here in order to propagate to all sublocations
\&            which are not remote (provided this root is not remote either)
\&
\&  Returns : seq_id
\&  Args    : [optional] seq_id value to set
.Ve
.SS "each_gap"
.IX Subsection "each_gap"
.Vb 3
\& Title   : each_gap
\& Usage   : $obj\->each_gap();
\& Function:
\&
\&            Returns a list of Bio::Coordianate::Result::Gap objects.
\&
\& Returns : list of gaps
\& Args    : none
.Ve
.SS "each_match"
.IX Subsection "each_match"
.Vb 3
\& Title   : each_match
\& Usage   : $obj\->each_match();
\& Function:
\&
\&            Returns a list of Bio::Coordinate::Result::Match objects.
\&
\& Returns : list of Matchs
\& Args    : none
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "add_location"
.IX Subsection "add_location"
.Vb 3
\& Title   : add_sub_Location
\& Usage   : $obj\->add_sub_Location($variant)
\& Function:
\&
\&           Pushes one Bio::LocationI into the list of variants.
\&
\& Example :
\& Returns : 1 when succeeds
\& Args    : Location object
.Ve
.SS "add_result"
.IX Subsection "add_result"
.Vb 6
\& Title   : add_result
\& Usage   : $obj\->add_result($result)
\& Function: Adds the contents of one Bio::Coordinate::Result
\& Example :
\& Returns : 1 when succeeds
\& Args    : Result object
.Ve
.SS "match"
.IX Subsection "match"
.Vb 6
\& Title   : match
\& Usage   : $match_object = $obj\->match(); #or
\&           $gstart = $obj\->gap\->start;
\& Function: Read only method for retrieving or accessing the match object.
\& Returns : one Bio::Coordinate::Result::Match
\& Args    :
.Ve
.SS "gap"
.IX Subsection "gap"
.Vb 6
\& Title   : gap
\& Usage   : $gap_object = $obj\->gap(); #or
\&           $gstart = $obj\->gap\->start;
\& Function: Read only method for retrieving or accessing the gap object.
\& Returns : one Bio::Coordinate::Result::Gap
\& Args    :
.Ve
.SS "purge_gaps"
.IX Subsection "purge_gaps"
.Vb 5
\& Title   : purge_gaps
\& Usage   : $gap_count = $obj\->purge_gaps;
\& Function: remove all gaps from the Result
\& Returns : count of removed gaps
\& Args    :
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing lists"
.IX Subsection "Mailing lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting bugs"
.IX Subsection "Reporting bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/%%7Bdist%7D
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Heikki Lehvaslaiho <heikki@bioperl.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This software is copyright (c) by Heikki Lehvaslaiho.
.PP
This software is available under the same terms as the perl 5 programming language system itself.
