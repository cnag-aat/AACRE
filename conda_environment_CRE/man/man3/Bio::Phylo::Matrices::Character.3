.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Phylo::Matrices::Character 3"
.TH Bio::Phylo::Matrices::Character 3 "2014-02-08" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Phylo::Matrices::Character \- A character (column) in a matrix
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # No direct usage
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Objects of this type represent a single character in a matrix. By default, a
matrix will adjust the number of such objects it requires automatically as its
contents grow or shrink. The main function, at present, for objects of this
type is to facilitate NeXML serialization of characters and their annotations.
.SH "METHODS"
.IX Header "METHODS"
.SS "\s-1MUTATORS\s0"
.IX Subsection "MUTATORS"
.IP "\fIset_weight()\fR" 4
.IX Item "set_weight()"
.Vb 6
\& Type    : Mutator
\& Title   : set_weight
\& Usage   : $character\->set_weight(2);
\& Function: Sets character weight
\& Returns : $self
\& Args    : A number
.Ve
.IP "\fIset_codonpos()\fR" 4
.IX Item "set_codonpos()"
.Vb 6
\& Type    : Mutator
\& Title   : set_codonpos
\& Usage   : $character\->set_codonpos(2);
\& Function: Sets codon position for the column
\& Returns : $self
\& Args    : A number
.Ve
.SS "\s-1ACCESSORS\s0"
.IX Subsection "ACCESSORS"
.IP "\fIget_weight()\fR" 4
.IX Item "get_weight()"
.Vb 6
\& Type    : Accessor
\& Title   : get_weight
\& Usage   : my $weight = $character\->get_weight();
\& Function: Gets character weight
\& Returns : A number (default is 1)
\& Args    : NONE
.Ve
.IP "\fIget_codonpos()\fR" 4
.IX Item "get_codonpos()"
.Vb 6
\& Type    : Mutator
\& Title   : get_codonpos
\& Usage   : my $pos = $character\->get_codonpos;
\& Function: Gets codon position for the column
\& Returns : 1, 2, 3 or undef
\& Args    : None
.Ve
.SS "\s-1SERIALIZERS\s0"
.IX Subsection "SERIALIZERS"
.IP "\fIto_xml()\fR" 4
.IX Item "to_xml()"
Serializes characters to nexml format.
.Sp
.Vb 6
\& Type    : Format convertor
\& Title   : to_xml
\& Usage   : my $xml = $characters\->to_xml;
\& Function: Converts characters object into a nexml element structure.
\& Returns : Nexml block (SCALAR).
\& Args    : NONE
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
There is a mailing list at <https://groups.google.com/forum/#!forum/bio\-phylo> 
for any user or developer questions and discussions.
.IP "Bio::Phylo::Matrices::TypeSafeData" 4
.IX Item "Bio::Phylo::Matrices::TypeSafeData"
This object inherits from Bio::Phylo::Matrices::TypeSafeData, so the
methods defined therein are also applicable to characters objects
objects.
.IP "Bio::Phylo::Manual" 4
.IX Item "Bio::Phylo::Manual"
Also see the manual: Bio::Phylo::Manual and <http://rutgervos.blogspot.com>.
.SH "CITATION"
.IX Header "CITATION"
If you use Bio::Phylo in published research, please cite it:
.PP
\&\fBRutger A Vos\fR, \fBJason Caravas\fR, \fBKlaas Hartmann\fR, \fBMark A Jensen\fR
and \fBChase Miller\fR, 2011. Bio::Phylo \- phyloinformatic analysis using Perl.
\&\fI\s-1BMC\s0 Bioinformatics\fR \fB12\fR:63.
<http://dx.doi.org/10.1186/1471\-2105\-12\-63>
