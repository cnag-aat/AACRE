.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "PDF::API2::Resource::UniFont 3"
.TH PDF::API2::Resource::UniFont 3 "2019-08-09" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDF::API2::Resource::UniFont \- Unicode Font Support
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "$font = PDF::API2::Resource::UniFont\->new($pdf, @fontspecs, %options);" 4
.el .IP "\f(CW$font\fR = PDF::API2::Resource::UniFont\->new($pdf, \f(CW@fontspecs\fR, \f(CW%options\fR);" 4
.IX Item "$font = PDF::API2::Resource::UniFont->new($pdf, @fontspecs, %options);"
Returns a uni-font object.
.Sp
\&\fB\s-1FONTSPECS:\s0\fR fonts can be registered using the following hash-ref:
.Sp
.Vb 5
\&    {
\&        font   => $fontobj,     # the font to be registered
\&        blocks => $blockspec,   # the unicode blocks, the font is being registered for
\&        codes  => $codespec,    # the unicode codepoints, \-"\-
\&    }
.Ve
.Sp
\&\fB\s-1BLOCKSPECS:\s0\fR
.Sp
.Vb 4
\&    [
\&        1, 3,    # register font for blocks 1 and 3
\&        [1, 3],  # register font for blocks 1 .. 3
\&    ]
.Ve
.Sp
\&\fB\s-1CODESPECS:\s0\fR
.Sp
.Vb 4
\&    [
\&        1, 3,    # register font for codepoints 1 and 3
\&        [1, 3],  # register font for codepoints 1 .. 3
\&    ]
.Ve
.Sp
\&\fB\s-1NOTE:\s0\fR if you want to register a font for the entire unicode space
(ie. U+0000 .. U+FFFF), then simply specify a font-object without the hash-ref.
.Sp
Valid \f(CW%options\fR are:
.Sp
.Vb 2
\&  \*(Aq\-encode\*(Aq ... changes the encoding of the font from its default.
\&    (see "perldoc Encode" for a list of valid tags)
.Ve
