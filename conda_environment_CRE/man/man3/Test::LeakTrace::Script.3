.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Test::LeakTrace::Script 3"
.TH Test::LeakTrace::Script 3 "2017-06-17" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::LeakTrace::Script \- A LeakTrace interface for whole scripts
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&        #!perl \-w
\&        use Test::LeakTrace::Script sub{
\&                my($svref, $file, $line) = @_;
\&
\&                warn "leaked $svref from $file line $line.\en";
\&        };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a interface to \f(CW\*(C`Test::LeakTrace\*(C'\fR for whole scripts.
.SH "INTERFACE"
.IX Header "INTERFACE"
.SS "Command line interface"
.IX Subsection "Command line interface"
.Vb 1
\&        $ perl \-MTest::LeakTrace::Script script.pl
\&
\&        $ perl \-MTest::LeakTrace::Script=\-verbose script.pl
\&
\&        $ TEST_LEAKTRACE=\-lines script.pl
.Ve
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.SS "TEST_LEAKTRACE=mode"
.IX Subsection "TEST_LEAKTRACE=mode"
\fI\-simple (\s-1DEFAULT\s0)\fR
.IX Subsection "-simple (DEFAULT)"
.PP
\fI\-sv_dump\fR
.IX Subsection "-sv_dump"
.PP
\fI\-lines\fR
.IX Subsection "-lines"
.PP
\fI\-verbose\fR
.IX Subsection "-verbose"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Test::LeakTrace.
