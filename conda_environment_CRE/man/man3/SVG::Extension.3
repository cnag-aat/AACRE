.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "SVG::Extension 3"
.TH SVG::Extension 3 "2018-02-19" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SVG::Extension \- additional methods
.SS "extension"
.IX Subsection "extension"
return the element object
.SS "element_decl"
.IX Subsection "element_decl"
generate an element declaration in the \s-1DTD\s0
.SS "attribute_decl"
.IX Subsection "attribute_decl"
return generate an attribute list for an element
.SS "attlist_decl"
.IX Subsection "attlist_decl"
.SS "notation_decl(%attrs)"
.IX Subsection "notation_decl(%attrs)"
return an extension object of type \s-1NOTATION\s0
.SS "entity_decl(%attrs)"
.IX Subsection "entity_decl(%attrs)"
return an extension object of type '\s-1ENTITY\s0'
.SS "xmilfy"
.IX Subsection "xmilfy"
.SS "render"
.IX Subsection "render"
alias for xmlify
.SS "to_xml"
.IX Subsection "to_xml"
alias for xmlify
.SS "serialise"
.IX Subsection "serialise"
alias for xmlify
.SS "serialise"
.IX Subsection "serialise"
alias for xmlify
.SS "getDeclName"
.IX Subsection "getDeclName"
Simply an alias for the general method for SVG::Extension objects
.SS "getExtensionName"
.IX Subsection "getExtensionName"
alias to getDeclName
.SS "getDeclNames"
.IX Subsection "getDeclNames"
return list of existing decl types by extracting it from the overall list
of existing element types
.PP
sub getDeclNames {
.SS "getExtensionNames"
.IX Subsection "getExtensionNames"
alias to getDeclNames
