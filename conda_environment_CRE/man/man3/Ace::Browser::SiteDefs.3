.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Ace::Browser::SiteDefs 3"
.TH Ace::Browser::SiteDefs 3 "2006-11-01" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Ace::Browser::SiteDefs \- Access to AceBrowser configuration files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use Ace;
\&  use Ace::Browser::AceSubs;
\&  use CGI qw(:standard);
\&
\&  my $configuration = Configuration;
\&  my $docroot  = $configuration\->Docroot;
\&  my @pictures = @{$configuration\->Pictures};
\&  my %displays = %{$configuration\->Displays};
\&  my $coderef  = $configuration\->Url_mapper;
\&  $coderef\->($param1,$param2);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Ace::Browser::SiteDefs evaluates an AceBrowser configuration file and
returns a configuration object (\*(L"config object\*(R" for short).  A config
object is a bag of dynamically-generated methods, derived from the
scalar variables, arrays, hashes and subroutines in the configuration
file.
.PP
The config object methods are a canonicalized form of the
configuration file variables, in which the first character of the
method is uppercase, and subsequent characters are lower case.  For
example, if the configuration variable was \f(CW$ROOT\fR, the method will be
\&\f(CW$config_object\fR\->Root.
.SS "Working with Configuration Objects"
.IX Subsection "Working with Configuration Objects"
To fetch a configuration object, use the Ace::Browser::AceSubs
\&\fIConfiguration()\fR function.  This will return a configuration object for 
the current database:
.PP
.Vb 1
\&  $config_object = Configuration();
.Ve
.PP
Thereafter, it's just a matter of making the proper method calls.
.PP
.Vb 2
\&   If the Configuration file is a....    The method call returns a...
\&   \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&   Scalar variable                       Scalar
\&   Array variable                        Array reference
\&   Hash variable                         Hash reference
\&   Subroutine                            Code reference
.Ve
.PP
If a variable is not defined, the corresponding method will return undef.
.SH "BUGS"
.IX Header "BUGS"
Please report them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Ace::Object, Ace::Browser::AceSubs, Ace::Browsr::SearchSubs, 
the \s-1README.ACEBROWSER\s0 file.
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein <lstein@cshl.org>.
.PP
Copyright (c) 2001 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
