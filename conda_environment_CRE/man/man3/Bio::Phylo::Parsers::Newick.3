.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Phylo::Parsers::Newick 3"
.TH Bio::Phylo::Parsers::Newick 3 "2014-02-08" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Phylo::Parsers::Newick \- Parser used by Bio::Phylo::IO, no serviceable parts inside
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module parses tree descriptions in parenthetical format. It is called by the 
Bio::Phylo::IO facade, don't call it directly. Several additional flags can be
passed to the Bio::Phylo::IO parse and parse_tree functions to influence how to deal
with complex newick strings:
.PP
.Vb 1
\& \-keep => [ ...list of taxa names... ]
.Ve
.PP
The \f(CW\*(C`\-keep\*(C'\fR flag allows you to only retain certain taxa of interest, ignoring others
while building the tree object.
.PP
.Vb 1
\& \-ignore_comments => 1,
.Ve
.PP
This will treat comments in square brackets as if they are a normal taxon name character,
this so that names such as \f(CW\*(C`Choristoneura diversana|BC ZSM Lep 23401[05/*\*(C'\fR are parsed 
\&\*(L"successfully\*(R". (Note: square brackets should \s-1NOT\s0 be used in this way as it will break
many parsers).
.PP
.Vb 1
\& \-keep_whitespace => 1,
.Ve
.PP
This will treat unescaped whitespace as if it is a normal taxon name character. Normally,
whitespace is only retained inside quoted strings (e.g. \f(CW\*(AqHomo sapiens\*(Aq\fR), otherwise it
is the convention to use underscores (\f(CW\*(C`Homo_sapiens\*(C'\fR). This is because some programs 
introduce whitespace to prettify a newick string, e.g. to indicate indentation/depth, 
in which case you almost certainly want to ignore it. This is the default behaviour. The 
option to keep it is provided for dealing with incorrectly formatted data.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
There is a mailing list at <https://groups.google.com/forum/#!forum/bio\-phylo> 
for any user or developer questions and discussions.
.IP "Bio::Phylo::IO" 4
.IX Item "Bio::Phylo::IO"
The newick parser is called by the Bio::Phylo::IO object.
Look there to learn how to parse newick strings.
.IP "Bio::Phylo::Manual" 4
.IX Item "Bio::Phylo::Manual"
Also see the manual: Bio::Phylo::Manual and <http://rutgervos.blogspot.com>.
.SH "CITATION"
.IX Header "CITATION"
If you use Bio::Phylo in published research, please cite it:
.PP
\&\fBRutger A Vos\fR, \fBJason Caravas\fR, \fBKlaas Hartmann\fR, \fBMark A Jensen\fR
and \fBChase Miller\fR, 2011. Bio::Phylo \- phyloinformatic analysis using Perl.
\&\fI\s-1BMC\s0 Bioinformatics\fR \fB12\fR:63.
<http://dx.doi.org/10.1186/1471\-2105\-12\-63>
