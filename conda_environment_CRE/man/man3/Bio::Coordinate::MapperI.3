.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Coordinate::MapperI 3"
.TH Bio::Coordinate::MapperI 3 "2016-12-15" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Coordinate::MapperI \- Interface describing coordinate mappers.
.SH "VERSION"
.IX Header "VERSION"
version 1.007001
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  # not to be used directly
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
MapperI defines methods for classes capable for mapping locations
between coordinate systems.
.SH "METHODS"
.IX Header "METHODS"
.SS "in"
.IX Subsection "in"
.Vb 6
\& Title   : in
\& Usage   : $obj\->in(\*(Aqpeptide\*(Aq);
\& Function: Set and read the input coordinate system.
\& Example :
\& Returns : value of input system
\& Args    : new value (optional), Bio::LocationI
.Ve
.SS "out"
.IX Subsection "out"
.Vb 6
\& Title   : out
\& Usage   : $obj\->out(\*(Aqpeptide\*(Aq);
\& Function: Set and read the output coordinate system.
\& Example :
\& Returns : value of output system
\& Args    : new value (optional), Bio::LocationI
.Ve
.SS "swap"
.IX Subsection "swap"
.Vb 6
\& Title   : swap
\& Usage   : $obj\->swap;
\& Function: Swap the direction of mapping: input <\-> output)
\& Example :
\& Returns : 1
\& Args    :
.Ve
.SS "test"
.IX Subsection "test"
.Vb 6
\& Title   : test
\& Usage   : $obj\->test;
\& Function: test that both components are of same length
\& Example :
\& Returns : ( 1 | undef )
\& Args    :
.Ve
.SS "map"
.IX Subsection "map"
.Vb 7
\& Title   : map
\& Usage   : $newpos = $obj\->map($loc);
\& Function: Map the location from the input coordinate system
\&           to a new value in the output coordinate system.
\& Example :
\& Returns : new value in the output coordiante system
\& Args    : Bio::LocationI
.Ve
.SS "return_match"
.IX Subsection "return_match"
.Vb 7
\& Title   : return_match
\& Usage   : $obj\->return_match(1);
\& Function: A flag to turn on the simplified mode of
\&           returning only one joined Match object or undef
\& Example :
\& Returns : boolean
\& Args    : boolean (optional)
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing lists"
.IX Subsection "Mailing lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting bugs"
.IX Subsection "Reporting bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/%%7Bdist%7D
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Heikki Lehvaslaiho <heikki@bioperl.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This software is copyright (c) by Heikki Lehvaslaiho.
.PP
This software is available under the same terms as the perl 5 programming language system itself.
