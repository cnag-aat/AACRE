.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "IPC::Run::Debug 3"
.TH IPC::Run::Debug 3 "2018-05-23" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IPC::Run::Debug \- debugging routines for IPC::Run
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&   ##
\&   ## Environment variable usage
\&   ##
\&   ## To force debugging off and shave a bit of CPU and memory
\&   ## by compile\-time optimizing away all debugging code in IPC::Run
\&   ## (debug => ...) options to IPC::Run will be ignored.
\&   export IPCRUNDEBUG=none
\&
\&   ## To force debugging on (levels are from 0..10)
\&   export IPCRUNDEBUG=basic
\&
\&   ## Leave unset or set to "" to compile in debugging support and
\&   ## allow runtime control of it using the debug option.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Controls IPC::Run debugging.  Debugging levels are now set by using words,
but the numbers shown are still supported for backwards compatibility:
.PP
.Vb 7
\&   0  none         disabled (special, see below)
\&   1  basic        what\*(Aqs running
\&   2  data         what\*(Aqs being sent/received
\&   3  details      what\*(Aqs going on in more detail
\&   4  gory         way too much detail for most uses
\&   10 all          use this when submitting bug reports
\&      noopts       optimizations forbidden due to inherited STDIN
.Ve
.PP
The \f(CW\*(C`none\*(C'\fR level is special when the environment variable \s-1IPCRUNDEBUG\s0
is set to this the first time IPC::Run::Debug is loaded: it prevents
the debugging code from being compiled in to the remaining IPC::Run modules,
saving a bit of cpu.
.PP
To do this in a script, here's a way that allows it to be overridden:
.PP
.Vb 6
\&   BEGIN {
\&      unless ( defined $ENV{IPCRUNDEBUG} ) {
\&         eval \*(Aqlocal $ENV{IPCRUNDEBUG} = "none"; require IPC::Run::Debug"\*(Aq
\&            or die $@;
\&      }
\&   }
.Ve
.PP
This should force IPC::Run to not be debuggable unless somebody sets
the \s-1IPCRUNDEBUG\s0 flag; modify this formula to grep \f(CW@ARGV\fR if need be:
.PP
.Vb 5
\&   BEGIN {
\&      unless ( grep /^\-\-debug/, @ARGV ) {
\&         eval \*(Aqlocal $ENV{IPCRUNDEBUG} = "none"; require IPC::Run::Debug"\*(Aq
\&         or die $@;
\&   }
.Ve
.PP
Both of those are untested.
.SH "AUTHOR"
.IX Header "AUTHOR"
Barrie Slaymaker <barries@slaysys.com>, with numerous suggestions by p5p.
