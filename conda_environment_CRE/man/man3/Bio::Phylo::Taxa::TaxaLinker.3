.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Bio::Phylo::Taxa::TaxaLinker 3"
.TH Bio::Phylo::Taxa::TaxaLinker 3 "2014-02-08" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Phylo::Taxa::TaxaLinker \- Superclass for objects that link to taxa objects
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& use Bio::Phylo::Factory;
\& my $fac = Bio::Phylo::Factory\->new;
\&
\& my $matrix = $fac\->create_matrix;
\& my $taxa = $fac\->create_taxa;
\&
\& if ( $matrix\->isa(\*(AqBio::Phylo::Taxa::TaxaLinker\*(Aq) ) {
\&    $matrix\->set_taxa( $taxa );
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is a superclass for objects that link to Bio::Phylo::Taxa objects.
.SH "METHODS"
.IX Header "METHODS"
.SS "\s-1MUTATORS\s0"
.IX Subsection "MUTATORS"
.IP "\fIset_taxa()\fR" 4
.IX Item "set_taxa()"
Associates invocant with Bio::Phylo::Taxa argument.
.Sp
.Vb 7
\& Type    : Mutator
\& Title   : set_taxa
\& Usage   : $obj\->set_taxa( $taxa );
\& Function: Links the invocant object
\&           to a taxa object.
\& Returns : Modified $obj
\& Args    : A Bio::Phylo::Taxa object.
.Ve
.IP "\fIunset_taxa()\fR" 4
.IX Item "unset_taxa()"
Removes association between invocant and Bio::Phylo::Taxa object.
.Sp
.Vb 6
\& Type    : Mutator
\& Title   : unset_taxa
\& Usage   : $obj\->unset_taxa();
\& Function: Removes the link between invocant object and taxa
\& Returns : Modified $obj
\& Args    : NONE
.Ve
.SS "\s-1ACCESSORS\s0"
.IX Subsection "ACCESSORS"
.IP "\fIget_taxa()\fR" 4
.IX Item "get_taxa()"
Retrieves association between invocant and Bio::Phylo::Taxa object.
.Sp
.Vb 11
\& Type    : Accessor
\& Title   : get_taxa
\& Usage   : my $taxa = $obj\->get_taxa;
\& Function: Retrieves the Bio::Phylo::Taxa
\&           object linked to the invocant.
\& Returns : Bio::Phylo::Taxa
\& Args    : NONE
\& Comments: This method returns the Bio::Phylo::Taxa
\&           object to which the invocant is linked.
\&           The returned object can therefore contain
\&           *more* taxa than are actually in the matrix.
.Ve
.IP "\fIcheck_taxa()\fR" 4
.IX Item "check_taxa()"
Performs sanity check on taxon relationships.
.Sp
.Vb 6
\& Type    : Interface method
\& Title   : check_taxa
\& Usage   : $obj\->check_taxa
\& Function: Performs sanity check on taxon relationships
\& Returns : $obj
\& Args    : NONE
.Ve
.IP "\fImake_taxa()\fR" 4
.IX Item "make_taxa()"
Creates a taxa block from the objects contents if none exists yet.
.Sp
.Vb 6
\& Type    : Decorated interface method
\& Title   : make_taxa
\& Usage   : my $taxa = $obj\->make_taxa
\& Function: Creates a taxa block from the objects contents if none exists yet.
\& Returns : $taxa
\& Args    : NONE
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
There is a mailing list at <https://groups.google.com/forum/#!forum/bio\-phylo> 
for any user or developer questions and discussions.
.IP "Bio::Phylo::Matrices::Matrix" 4
.IX Item "Bio::Phylo::Matrices::Matrix"
The matrix object subclasses Bio::Phylo::Taxa::TaxaLinker.
.IP "Bio::Phylo::Forest" 4
.IX Item "Bio::Phylo::Forest"
The forest object subclasses Bio::Phylo::Taxa::TaxaLinker.
.IP "Bio::Phylo::Manual" 4
.IX Item "Bio::Phylo::Manual"
Also see the manual: Bio::Phylo::Manual and <http://rutgervos.blogspot.com>.
.SH "CITATION"
.IX Header "CITATION"
If you use Bio::Phylo in published research, please cite it:
.PP
\&\fBRutger A Vos\fR, \fBJason Caravas\fR, \fBKlaas Hartmann\fR, \fBMark A Jensen\fR
and \fBChase Miller\fR, 2011. Bio::Phylo \- phyloinformatic analysis using Perl.
\&\fI\s-1BMC\s0 Bioinformatics\fR \fB12\fR:63.
<http://dx.doi.org/10.1186/1471\-2105\-12\-63>
