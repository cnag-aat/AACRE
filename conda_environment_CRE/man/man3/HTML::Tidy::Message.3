.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "HTML::Tidy::Message 3"
.TH HTML::Tidy::Message 3 "2017-09-13" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::Tidy::Message \- Message object for the Tidy functionality
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See HTML::Tidy for all the gory details.
.SH "EXPORTS"
.IX Header "EXPORTS"
None.  It's all object-based.
.SH "METHODS"
.IX Header "METHODS"
Almost everything is an accessor.
.ie n .SS "new( $file, $line, $column, $text )"
.el .SS "new( \f(CW$file\fP, \f(CW$line\fP, \f(CW$column\fP, \f(CW$text\fP )"
.IX Subsection "new( $file, $line, $column, $text )"
Create an object.  It's not very exciting.
.SS "\fIwhere()\fP"
.IX Subsection "where()"
Returns a formatted string that describes where in the file the
error has occurred.
.PP
For example,
.PP
.Vb 1
\&    (14:23)
.Ve
.PP
for line 14, column 23.
.PP
The terrible thing about this function is that it's both a plain
ol' formatting function as in
.PP
.Vb 1
\&    my $str = where( 14, 23 );
.Ve
.PP
\&\s-1AND\s0 it's an object method, as in:
.PP
.Vb 1
\&    my $str = $error\->where();
.Ve
.PP
I don't know what I was thinking when I set it up this way, but
it's bad practice.
.SS "\fIas_string()\fP"
.IX Subsection "as_string()"
Returns a nicely-formatted string for printing out to stdout or some similar user thing.
.SS "\fIfile()\fP"
.IX Subsection "file()"
Returns the filename of the error, as set by the caller.
.SS "\fItype()\fP"
.IX Subsection "type()"
Returns the type of the error.  This will either be \f(CW\*(C`TIDY_ERROR\*(C'\fR,
or \f(CW\*(C`TIDY_WARNING\*(C'\fR.
.SS "\fIline()\fP"
.IX Subsection "line()"
Returns the line number of the error, or 0 if there isn't an applicable
line number.
.SS "\fIcolumn()\fP"
.IX Subsection "column()"
Returns the column number, or 0 if there isn't an applicable column
number.
.SS "\fItext()\fP"
.IX Subsection "text()"
Returns the text of the message.  This does not include a type string,
like \*(L"Info: \*(R".
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2005\-2017 Andy Lester.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the Artistic License v2.0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Lester, \f(CW\*(C`<andy@petdance.com>\*(C'\fR
